[tool.poetry]
name = "nexus"
version = "0.1.0"
description = ""
authors = ["Alisson <alissonfilipe937@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
django = "^4.2.6"
djangorestframework = "^3.14.0"
markdown = "^3.5"
django-filter = "^23.3"
pendulum = "^2.1.2"
django-environ = "^0.11.2"
gunicorn = "^21.2.0"
psycopg2-binary = "^2.9.9"
whitenoise = "^6.6.0"
gevent = "^23.9.1"
factory-boy = "^3.3.0"
celery = "5.3.6"
django-celery-beat = "2.5.0"
django-celery-results = "2.5.1"
redis = "^5.0.1"
requests = "^2.31.0"
drf-yasg = "^1.21.7"
boto3 = "^1.39.4"
amqp = "^5.2.0"
sentry-sdk = "^1.39.2"
mozilla-django-oidc = "^4.0.0"
django-cors-headers = "^4.3.1"
openai = "1.104.1"
pre-commit = "^3.6.2"
fastapi = "0.116.1"
uvicorn = "^0.29.0"
elastic-apm = "^6.22.2"
django-prometheus = "^2.3.1"
prometheus-client = "^0.20.0"
langchain = "^0.3.1"
langchain-community = "^0.3.1"
playwright = "^1.47.0"
django-storages = "^1.14.4"
ftfy = "^6.2.3"
hiredis = "^3.0.0"
django-redis = "^5.4.0"
channels = {extras = ["daphne"], version = "^4.2.0"}
channels-redis = "^4.2.1"
emoji = "^2.14.0"
tiktoken = "^0.8.0"
termcolor = "^2.5.0"
rich = "^13.9.4"
matplotlib = "^3.10.3"
seaborn = "^0.13.2"
scikit-learn = "^1.6.1"
pandas = "^2.2.3"
weni-datalake-sdk = "0.2.2"
pyjwt = "^2.10.1"
cryptography = "^45.0.5"
openai-agents = "0.2.11"
langfuse = "^3.3.2"
nest-asyncio = "^1.6.0"
pydantic-ai = {extras = ["logfire"], version = "^0.8.0"}




[tool.poetry.group.dev.dependencies]
ipython = "^8.16.1"
taskipy = "^1.12.0"
blue = "^0.9.1"
ruff = "^0.1.3"
isort = "^5.12.0"
ignr = "^2.2"
pytest-django = "^4.6.0"
pytest-cov = "^4.1.0"
freezegun = "^1.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 79
exclude = ['.venv', 'migrations', 'manage.py', 'wsgi.py', 'asgi.py', '__init__.py']

[tool.isort]
profile = "black"
line_length = 79
extend_skip = ['migrations', 'manage.py', 'wsgi.py', 'asgi.py', '__init__.py']

[tool.pytest.ini_options]
pythonpath = "."
python_files = "tests.py test_*.py *_tests.py"
DJANGO_SETTINGS_MODULE = "nexus.settings"

[tool.blue]
extend-exclude = '''
    (
        migrations/
        | manage.py
        | settings.py
        | __init__.py
    )
'''

[tool.coverage.report]
omit = [
  "settings.py",
  "asgi.py",
  "wsgi.py",
  "__init__.py",
  "migrations/",
  "manage.py",
  "nexus/urls.py",
  "router/clients/",
  "router/management/commands/runapi.py"
] 

[tool.taskipy.tasks]
lint = 'ruff . && blue --check . --diff'
format = 'blue .  && isort .'
pre_test = 'task lint'
test = 'pytest -s -x --cov=. -vv'
post_test = 'coverage html'
run = 'python manage.py runserver'
makemigrations = 'python manage.py makemigrations'
migrate = 'python manage.py migrate'

