version: '3.6'

services:
  database:
      image: postgres
      ports:
        - 5432:5432
      networks:
        - default
        - nexus
      environment:
        - POSTGRES_USER=${POSTGRES_USER:-nexus}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-nexus}
        - POSTGRES_DB=${POSTGRES_DB:-nexus}
  nexus:
    image: ${DOCKER_IMAGE_NAME:-ilha/nexus}:${TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${ENGINE_PORT:-8000}:8000
    networks:
      - default
      - nexus
    environment:
      - SECRET_KEY=${SECRET_KEY:-SK}
      - DEBUG=${DEBUG:-true}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - DEFAULT_DATABASE=${DEFAULT_DATABASE:-postgres://nexus:nexus@database:5432/nexus}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
  celery:
    build: 
      context: .
      dockerfile: Dockerfile
    depends_on:
      - nexus
      - redis
      - database
    networks:
      - default
      - nexus
    command: "celery -A nexus worker -l info -B"
    environment:
        - SECRET_KEY=${SECRET_KEY:-SK}
        - DEBUG=${DEBUG:-true}
        - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
        - DEFAULT_DATABASE=${DEFAULT_DATABASE:-postgres://nexus:nexus@database:5432/nexus}
        - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
  redis:
    image: redis
    ports:
      - 6379:6379
  rabbitmq:
    image: rabbitmq:3.9.7-management
    ports:
      - "5672:5672"  # Porta para conex√£o com o RabbitMQ
      - "15672:15672"  # Porta para acessar a interface de gerenciamento do RabbitMQ
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.16
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - http.port=9200
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_HEAP_SIZE=1g
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
      - network.publish_host=localhost
      - xpack.security.enabled=false
    networks:
      - default
      - nexus

networks:
  nexus:
    external: true