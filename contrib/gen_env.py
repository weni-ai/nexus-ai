"""
Responsible for speeding up the generation of a local '.env' configuration file.
OBS: Run in development environment only
"""

import os

from django.core.management.utils import get_random_secret_key


def dict_to_config_string(data: dict) -> str:
    config_string = ""
    for key, value in data.items():
        config_string += f"{key}=\"{value}\"\n"

    return config_string.strip()


def generate_env():
    env_path = os.path.join(
        os.path.dirname(os.path.dirname(os.path.abspath(__file__))), ".env"
    )

    if os.path.exists(env_path):
        print("A .env file already exists, delete it and run again")
        return

    VARIABLES = {
        "DEBUG": True,
        "ALLOWED_HOSTS": "*",
        "SECRET_KEY": get_random_secret_key(),
        "DEFAULT_DATABASE": "postgres://nexus:nexus@postgres:5432/nexus",
        "CELERY_BROKER_URL": "redis://redis:6379/1",
        "REDIS_CHANNEL_URL": "redis://redis:6379/1",
        "WENIGPT_FLOWS_CLASSIFY_TOKEN": "",
        "WENIGPT_FLOWS_SEARCH_TOKEN": "",
        "SENTENX_BASE_URL": "",
        "SENTENX_AUTH_TOKEN": "",
        "WENIGPT_API_URL": "",
        "WENIGPT_API_TOKEN": "",
        "WENIGPT_PROMPT_INTRODUCTION": "",
        "WENIGPT_PROMPT_TEXT": "",
        "WENIGPT_PROMPT_QUESTION": "",
        "WENIGPT_PROMPT_REINFORCEMENT_INSTRUCTION": "",
        "WENIGPT_PROMPT_ANSWER": "",
        "WENIGPT_MAX_NEW_TOKENS": "",
        "WENIGPT_MAX_LENGHT": "",
        "WENIGPT_TOP_P": "",
        "WENIGPT_TOP_K": "",
        "WENIGPT_TEMPERATURE": "",
        "WENIGPT_STOP": "",
        "WENIGPT_VERSION": "",
        "AWS_S3_BUCKET_NAME": "",
        "AWS_S3_REGION_NAME": "",
        "RABBITMQ_DEFAULT_USER": "",
        "RABBITMQ_DEFAULT_PASS": "",
        "OIDC_RP_SERVER_URL": "",
        "OIDC_RP_REALM_NAME": "",
        "OIDC_OP_JWKS_ENDPOINT": "",
        "OIDC_RP_CLIENT_ID": "",
        "OIDC_RP_CLIENT_SECRET": "",
        "OIDC_OP_AUTHORIZATION_ENDPOINT": "",
        "OIDC_OP_TOKEN_ENDPOINT": "",
        "OIDC_OP_USER_ENDPOINT": "",
        "OPENAI_API_KEY": "",
        "DJANGO_ALLOW_ASYNC_UNSAFE": False,
        "CHATGPT_ORGS": "",
        "CHATGPT_MODEL": "",
        "WENIGPT_FINE_TUNNING_DEFAULT_VERSION": "",
        "WENIGPT_FINE_TUNNING_VERSIONS": "",
        "WENIGPT_OPENAI_TOKEN": "",
        "DEFAULT_INSTRUCTIONS": "",
        "LLM_DEFAULT_CHAR_INSTRUCTION": "",
        "SENTRY_URL": "",
        "USE_SENTRY": False,
        "ENVIRONMENT": "",
        "FEW_SHOT_BOTO": "",
        "CHATGPT_POST_PROMPT": "",
        "WENIGPT_POST_PROMPT": "",
        "FLOWS_SEND_MESSAGE_INTERNAL_TOKEN": "",
        "CHATGPT_CONTEXT_PROMPT": "",
        "WENIGPT_CONTEXT_PROMPT": "",
        "CHATGPT_NO_CONTEXT_PROMPT": "",
        "WENIGPT_NO_CONTEXT_PROMPT": "",
        "FLOWS_REST_ENDPOINT": "",
        "DEFAULT_AGENT_NAME": "",
        "DEFAULT_AGENT_ROLE": "",
        "DEFAULT_AGENT_PERSONALITY": "",
        "DEFAULT_AGENT_GOAL": "",
        "USE_EDA": True,
        "USE_SENTRY": False,
        "SENTRY_URL": "",
        "IRC_UUID": "",
        "IRC_TOKEN": "",
        "WENIGPT_SHARK_API_URL": "SHARK",
        "WENIGPT_PAIRS_TEMPLATE_PROMPT": "",
        "WENIGPT_NEXT_QUESTION_TEMPLATE_PROMPT": "",
        "WENIGPT_TEST_API_URL": "TEST",
        "WENIGPT_TEST_CONTEXT_PROMPT": "TEST PROMPT",
        "WENIGPT_TEST_NO_CONTEXT_PROMPT": "TEST PROMPT WITHOUT CONTEXT",
        "WENIGPT_TEST_PAIRS_TEMPLATE_PROMPT": "TEST PAIRS",
        "WENIGPT_TEST_NEXT_QUESTION_TEMPLATE_PROMPT": "TEST QUESTION",
        "AWS_BEDROCK_REGION_NAME": "",
        "AWS_BEDROCK_KNOWLEDGE_BASE_ID": "",
        "AWS_BEDROCK_DATASOURCE_ID": "",
        "AWS_BEDROCK_BUCKET_NAME": "",
        "AWS_BEDROCK_EMBEDDING_MODEL_ARN": "",
        "AWS_BEDROCK_EMBEDDING_MODEL_DIMENSIONS": "",
        "AWS_BEDROCK_ROLE_ARN": "",
        "AWS_BEDROCK_MODEL_ID": "",
        "AWS_BEDROCK_ACCESS_KEY": "",
        "AWS_BEDROCK_SECRET_KEY": "",
        "USE_BEDROCK_WENIGPT": "",
        "AWS_ACCESS_KEY_ID": "",
        "AWS_SECRET_ACCESS_KEY": "",
        "AWS_S3_REGION_NAME": "us-east-1",
        "AWS_BEDROCK_REGION_NAME": "us-east-1",
        "FLOWS_TOKEN_ZEROSHOT": "",
        "ZEROSHOT_SUFFIX": "",
        "ZEROSHOT_BEDROCK_AWS_KEY": "",
        "ZEROSHOT_BASE_NLP_URL": "",
        "ZEROSHOT_TOP_P": 0.1,
        "ZEROSHOT_TOP_K": 10,
        "ZEROSHOT_STOP": "",
        "ZEROSHOT_TEMPERATURE": 10,
        "ZEROSHOT_BEDROCK_MODEL_ID": "",
        "ZEROSHOT_N": 1,
        "ZEROSHOT_DO_SAMPLE": "",
        "ZEROSHOT_TOKEN": "",
        "ZEROSHOT_MAX_TOKENS": 20,
        "ZEROSHOT_MODEL_BACKEND": "",
        "ZEROSHOT_BEDROCK_AWS_SECRET": "",
        "ZEROSHOT_BEDROCK_AWS_REGION": "us-east-1",
        "AWS_ACCESS_KEY_ID": "",
        "AWS_SECRET_ACCESS_KEY": "",
        "BAD_WORDS_LIST": "bad_word1,bad_word2",
        "BAD_WORDS_RESPONSE": "",
        "DEFAULT_RETAIL_INSTRUCTIONS": "",
        "AWS_BEDROCK_AGENTS_MODEL_ID": "claude-3-5-sonnet-20241022-v2:0",
        "AWS_BEDROCK_SUPERVISOR_MODEL_ID": "",
        "AGENT_VALID_USERS": "",
        "DOUBT_ANALYST_EXTERNAL_ID": "",
        "INSIGHTS_SUPERUSER_TOKEN": "",
        "MODELS_SUPERUSER_TOKEN": "",
        "RETAIL_SUPERUSER_TOKEN": "",
        "SENTENX_UPDATE_TASK_TOKEN": "",
        "WENIGPT_COOKIE": "",
        "BILLING_REST_ENDPOINT": "",
        "FEW_SHOT_CHATGPT": "",
        "AWS_BEDROCK_LARGE_DATASOURCE_ID": "",
        "AWS_BEDROCK_SUPERVISOR_EXTERNAL_ID": "",
        "AWS_BEDROCK_GUARDRAIL_IDENTIFIER": "",
        "AWS_BEDROCK_GUARDRAIL_VERSION": "",
        "AGENT_RESOURCE_ROLE_ARN": "",
        "EMAIL_HOST": "",
        "EMAIL_HOST_USER": "",
        "EMAIL_HOST_PASSWORD": "",
        "JWT_SECRET_KEY": "",
        "CONVERSATION_TOPIC_CLASSIFIER_NAME": "",
        "CONVERSATION_RESOLUTION_NAME": "",
        "AGENT_UUID_CSAT": "",
        "AGENT_UUID_NPS": "",
        "WENIGPT_BEDROCK_CONVERSATION_CUSTOM_MODEL_ID": "",
        "BEDROCK_CONVERSE_PROMPT": "",
        "WENIGPT_DEFAULT_LANGUAGE": "por",
        "TRULENS_DATABASE_URL": "sqlite:///default.sqlite",
        "HC_ZEROSHOT_URL": "",
        "HC_GOLFINHO_URL": "",
        "HC_WENI_TOKEN": "",
        "PROMETHEUS_AUTH_TOKEN": "",
        "ACTION_GENERATE_NAME_MODEL": "llama3-70b-8192",
        "RECENT_ACTIVITIES_START_DATE": "",
        "FUNCTION_CALLING_CHATGPT_PROMPT": "",
        "GROUNDEDNESS_MODEL": "gpt-4o-mini",
        "GROUNDEDNESS_SYSTEM_PROMPT": "",
        "GROUNDEDNESS_USER_PROMPT": "",
        "SHARK_MODEL_ENCODING_NAME": "cl100k_base",
        "AWS_BEDROCK_SUPERVISOR_INSTRUCTIONS": "",
        "AWS_BEDROCK_LAMBDA_ARN": "",
        "HUMAN_SUPPORT_AGENT_ID": "",
        "HUMAN_SUPPORT_INSTRUCTIONS": "",
        "COMPONENTS_INSTRUCTIONS_UP": "",
        "BEDROCK_AGENT_INLINE_CLIENT_ID": "",
        "BEDROCK_AGENT_INLINE_CLIENT_SECRET": "",
        "AWS_RATIONALE_MODEL": "amazon.nova-pro-v1:0",
        "COLLABORATORS_DEFAULT_INSTRUCTIONS": "",
        "PROJECT_AUTH_API_BASE_URL": "",
        "INVOKE_AGENTS_RATE_LIMIT": "2500/m",
        "RATIONALE_IMPROVEMENT_INSTRUCTIONS": "",
        "SUBSEQUENT_RATIONALE_INSTRUCTIONS": "",
        "COMPLEXITY_LAYER_LAMBDA": "lambda-complexity-layer",
        "AWS_COMPONENTS_FUNCTION_ARN": "",
        "FORMATTER_AGENT_MODEL": "gpt-4.1-mini",
        "FLOW_USER_EMAIL": "",
        "FILTER_SENTRY_EVENTS": "",
        "AGENT_VALID_ORGS": "",
        "AGENT_CONFIGURATION_ALLOWED_USERS": "",
        "AWS_BEDROCK_SUPERVISOR_ACTION_GROUP_ID": "",
        "AWS_BEDROCK_SUPERVISOR_KNOWLEDGE_BASE_INSTRUCTIONS": "",
        "SENTENX_THRESHOLD": "1.0",
        "OIDC_DRF_AUTH_BACKEND": "nexus.authentication.authentication.WeniOIDCAuthenticationBackend",
        "WENIGPT_SHARK_CONTEXT_PROMPT": "",
        "WENIGPT_SHARK_NO_CONTEXT_PROMPT": "",
        "WENIGPT_SHARK_PAIRS_TEMPLATE_PROMPT": "",
        "WENIGPT_SHARK_NEXT_QUESTION_TEMPLATE_PROMPT": "",
        "TOKEN_LIMIT": "0",
        "SEND_EMAILS": "False",
        "EMAIL_USE_SSL": "False",
        "EMAIL_USE_TLS": "False",
        "OPENAI_AGENTS_FOUNDATION_MODEL": "gpt-4o-mini",
        "BEDROCK_CONVERSE_MAX_LENGHT": "4096",
        "MULTI_AGENTS_PROJECTS": "",
        "HUMAN_SUPPORT_ACTION_GROUP": "",
        "APM_DISABLE_SEND": "False",
        "APM_SECRET_TOKEN": "",
        "APM_SERVER_URL": "",
        "APM_SERVICE_DEBUG": "False",
        "APM_SERVICE_NAME": "",
        "EMAIL_PORT": "0",
        "PROJECT_COMPONENTS": "",
        "REDIS_MESSAGE_CACHE_KEY_DURATION": "0",
        "USE_REDIS_CACHE_CONTEXT": "True",
        "EDA_BROKER_PORT": "5672",
        "OIDC_RP_SCOPES": "openid email",
        "LLM_CHAR_LIMIT": "640",
        "CREDENTIAL_ENCRYPTION_KEY": "",
        "OFFICIAL_SMART_AGENT_EDITORS": "",
        "LOCKED_FOUNDATION_MODELS": "",
        "DYNAMODB_REGION": "us-east-1",
        "DYNAMODB_MESSAGE_TABLE": "NexusMessages",
        "SUPERVISOR_SERVICE_AVAILABLE_PROJECTS": "",
        "SUPERVISOR_SERVICE_AVAILABLE": "False",
        "REPORT_RECIPIENT_EMAILS": "",
        "CSRF_TRUSTED_ORIGINS": "",
        "MULTI_AGENTS_CAN_ACCESS": "",
        "SKILL_FILE_SIZE_LIMIT": "50",
        "START_INLINE_AGENTS_ACK_LATE": "False",
        "CELERY_WORKER_PREFETCH_MULTIPLIER": "1",
        "PROJECTS_WITH_SPECIAL_SESSION_ID": "",
        "PROJECTS_WITH_LARGE_DATASOURCE": "",
        "MODELS_WITH_REASONING": "",
    }

    with open(env_path, "w") as configfile:
        configfile.write(dict_to_config_string(VARIABLES))


if __name__ == "__main__":
    generate_env()
